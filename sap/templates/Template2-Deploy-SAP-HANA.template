{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "(0008) Deploy SAP HANA  on AWS",
    "Parameters": {
        "VPCID": {
            "Type": "String",
            "Description": "VPC-ID of your existing Virtual Private Cloud (VPC) where you want to depoy SAP HANA.",
            "Default": "vpc-xxxxxxxx",
            "AllowedPattern": "vpc-[0-9a-z]{8}"
        },
        "PrivSubCIDR": {
            "Description": "CIDR Block for Private Subnet where SAP HANA will be deployed.",
            "Type": "String",
            "Default": "10.0.1.0/24",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        },
        "DMZCIDR": {
            "Description": "CIDR Block for the Public DMZ Subnet located in the new VPC.",
            "Type": "String",
            "Default": "10.0.2.0/24",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        },
        "HANASubnet": {
            "Type": "String",
            "Description": "Subnet-ID the existing subnet in your VPC where you want to deploy SAP HANA.",
            "Default": "subnet-xxxxxxxx",
            "AllowedPattern": "subnet-[0-9a-z]{8}"
        },
        "SnapShotID": {
            "Type": "String",
            "Description": "SnapShot-ID of where your SAP Installation Media can be found (Requires DATA_UNITS Directory).",
            "Default": "snap-xxxxxxxx",
            "AllowedPattern": "snap-[0-9a-z]{8}"
        },
        "DomainName": {
            "Type": "String",
            "Description": "Domain name to be used for fully qualified domain names.",
            "Default": "local"
        },
        "HANAMasterHostname": {
            "Type": "String",
            "Description": "Hostname to be used for SAP HANA Master Node (DNS Shortname).",
            "Default": "imdbmaster"
        },
        "PlacementGroupName": {
            "Type": "String",
            "Description": "Name of existing Placement Group where HANA should be deployed (optional)."
        },
        "KeyName": {
            "Type": "String",
            "Description": "Name of an existing EC2 KeyPair, all instances will launch with this KeyPair"
        },
        "MyRegionAMI": {
            "Type": "String",
            "Description": "Region specific AMI containing the OS image for Master/Worker nodes (SUSE 11.3 currently)",
            "Default": "ami-xxxxxxxx"
        },
        "MyInstanceType": {
            "Type": "String",
            "Description": "Instance Type of HANA host [r3.8xlarge/r3.4xlarge/r3.2xlarge/c3.8xlarge]",
            "Default": "r3.8xlarge"
        },
        "MyAvailabilityZone": {
            "Type": "String",
            "Description": "Availability Zone where HANA nodes would be launched",
            "AllowedValues": [
                "us-west-1a",
                "us-west-1b",
                "us-west-1c",
                "us-west-2a",
                "us-west-2b",
                "us-west-2c",
                "us-east-1a",
                "us-east-1b",
                "us-east-1c",
                "us-east-1d",
                "us-east-1e",
                "eu-west-1a",
                "eu-west-1b",
                "eu-west-1c",
                "ap-northeast-1a",
                "ap-northeast-1b",
                "ap-northeast-1c",
                "ap-southeast-1a",
                "ap-southeast-1b",
                "ap-southeast-2a",
                "ap-southeast-2b",
		"eu-central-1a",
		"eu-central-1a",
		"eu-central-1b"
            ]
        },
        "HostCount": {
            "Type": "String",
            "Description": "Number of HANA hosts in the cluster",
            "Default": "1",
            "AllowedPattern": "([0-5])"
        },
        "SID": {
            "Type": "String",
            "Default": "HDB",
            "Description": "HANA SID",
            "AllowedPattern": "([A-Z]{1}[0-9A-Z]{2})",
            "ConstraintDescription": "The SID value must be 3 characters, the first character must be an upper case letter, the second and third character must be either 0-9 or an upper case letter."
        },
        "SAPInstanceNum": {
            "Type": "String",
            "Default": "00",
            "Description": "SAP HANA Instance Number. This instance number will also impact the open ports for the HANA Security Group. The Instance Number value must be 2 digits, the first number must be between 0-9, the second number between 0-7.",
            "AllowedPattern": "([0-9]{1}[0-7]{1})"
        },
        "HANAMasterPass": {
            "Type": "String",
            "Description": "HANA Master Password - must be a minimum of 8 characters and include upper case, lower case and numeric values",
            "NoEcho": "true",
            "MinLength": "8",
            "AllowedPattern": "^(?=.*?[a-z])(?=.*?[A-Z])(?=.*[0-9]).*$",
            "ConstraintDescription": "The HANA password must be a minimum of 8 characters and include upper case, lower case and numeric values"
        }
    },
    "Mappings": {
        "VolSize": {
            "c3.8xlarge": {
                "Size": "334"
            },
            "r3.2xlarge": {
                "Size": "334"
            },
            "r3.4xlarge": {
                "Size": "334"
            },
            "r3.8xlarge": {
                "Size": "667"
            }
        },
        "VolCount": {
            "c3.8xlarge": {
                "Size": "4"
            },
            "r3.2xlarge": {
                "Size": "4"
            },
            "r3.4xlarge": {
                "Size": "4"
            },
            "r3.8xlarge": {
                "Size": "4"
            }
        }
    },
    "Conditions": {
        "twoormorenodes": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        "2",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                },
                {
                    "Condition": "threeormorenodes"
                },
                {
                    "Condition": "fourormorenodes"
                },
                {
                    "Condition": "fiveormorenodes"
                }
            ]
        },
        "threeormorenodes": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        "3",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                },
                {
                    "Condition": "fourormorenodes"
                },
                {
                    "Condition": "fiveormorenodes"
                }
            ]
        },
        "fourormorenodes": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        "4",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                },
                {
                    "Condition": "fiveormorenodes"
                }
            ]
        },
        "fiveormorenodes": {
            "Fn::Equals": [
                "5",
                {
                    "Ref": "HostCount"
                }
            ]
        },
        "PlacementGroupNull": {
            "Fn::Equals": [
                {
                    "Ref": "PlacementGroupName"
                },
                "AWS::NoValue"
            ]
        }
    },
    "Outputs": {
        "HANAMasterInstanceIP": {
            "Description": "HANA Master Node IP Address",
            "Value": {
                "Fn::GetAtt": [
                    "HANAMasterInstance",
                    "PrivateIp"
                ]
            }
        },
        "HANAMasterSecurityGroup": {
            "Description": "Security Group created for the SAP HANA Master node",
            "Value": {
                "Fn::GetAtt": [
                    "HANASecurityGroup",
                    "GroupId"
                ]
            }
        }
    },
    "Resources": {
        "SoftwareDepotVol": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "Size": "20",
                "AvailabilityZone": {
                    "Ref": "MyAvailabilityZone"
                },
                "SnapshotId": {
                    "Ref": "SnapShotID"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "SAP HANA Media Volume"
                    }
                ]
            }
        },
        "HANAMasterInterface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "Description": "Network Interface for HANA Master",
                "SubnetId": {
                    "Ref": "HANASubnet"
                },
                "GroupSet": [
                    {
                        "Ref": "HANASecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "HANAWorker1Interface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Condition": "twoormorenodes",
            "Properties": {
                "SubnetId": {
                    "Ref": "HANASubnet"
                },
                "Description": "Interface for HANA Worker 1",
                "GroupSet": [
                    {
                        "Ref": "HANASlaveSG"
                    }
                ],
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "HANAWorker2Interface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Condition": "threeormorenodes",
            "Properties": {
                "SubnetId": {
                    "Ref": "HANASubnet"
                },
                "Description": "Interface for HANA Worker 2",
                "GroupSet": [
                    {
                        "Ref": "HANASlaveSG"
                    }
                ],
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "HANAWorker3Interface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Condition": "fourormorenodes",
            "Properties": {
                "SubnetId": {
                    "Ref": "HANASubnet"
                },
                "Description": "Interface for HANA Worker 3",
                "GroupSet": [
                    {
                        "Ref": "HANASlaveSG"
                    }
                ],
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "HANAWorker4Interface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Condition": "fiveormorenodes",
            "Properties": {
                "SubnetId": {
                    "Ref": "HANASubnet"
                },
                "Description": "Interface for HANA Worker 4",
                "GroupSet": [
                    {
                        "Ref": "HANASlaveSG"
                    }
                ],
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "HANASecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable external access to the HANA Master and allow communication from slave instances",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "1",
                        "ToPort": "65535"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "111",
                        "ToPort": "111"
                    },
                    {
                        "IpProtocol": "udp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "111",
                        "ToPort": "111"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "2049",
                        "ToPort": "2049"
                    },
                    {
                        "IpProtocol": "udp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "2049",
                        "ToPort": "2049"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "4000",
                        "ToPort": "4002"
                    },
                    {
                        "IpProtocol": "udp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "4000",
                        "ToPort": "4002"
                    },
                    {
                        "IpProtocol": "icmp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "-1",
                        "ToPort": "-1"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "5",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "13"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "5",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "13"
                                ]
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "5",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "14"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "5",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "14"
                                ]
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "15"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "15"
                                ]
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "17"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "17"
                                ]
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "80",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    ""
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "80",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    ""
                                ]
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "09"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "09"
                                ]
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "43",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    ""
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "43",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    ""
                                ]
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "8080",
                        "ToPort": "8080"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "8443",
                        "ToPort": "8443"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "1128",
                        "ToPort": "1128"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "1129",
                        "ToPort": "1129"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "22",
                        "ToPort": "22"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "1",
                        "ToPort": "65535"
                    }
                ]
            }
        },
        "HANASlaveSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Condition": "twoormorenodes",
            "Properties": {
                "GroupDescription": "Enable communication between the master and slave instances",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1",
                        "ToPort": "65535",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "00"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "10"
                                ]
                            ]
                        },
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "15"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "15"
                                ]
                            ]
                        },
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "5",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "13"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "5",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "14"
                                ]
                            ]
                        },
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "15"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "15"
                                ]
                            ]
                        },
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "17"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "17"
                                ]
                            ]
                        },
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1128",
                        "ToPort": "1129",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1128",
                        "ToPort": "1129",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8443",
                        "ToPort": "8443",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        }
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "1",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "HANAIAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "HANA-Backup",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:*",
                                        "ec2:Describe*",
                                        "ec2:AttachNetworkInterface",
                                        "ec2:AttachVolume",
                                        "ec2:CreateTags",
                                        "ec2:CreateVolume",
                                        "ec2:RunInstances",
                                        "ec2:StartInstances",
                                        "ec2:DeleteVolume",
                                        "ec2:CreateSecurityGroup",
                                        "ec2:CreateSnapshot"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:*",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:GetItem",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:UpdateTable"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "HANAIAMProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "HANAIAMRole"
                    }
                ]
            }
        },
        "WaitForHANAInstall": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "HANAMasterInstance",
            "Properties": {
                "Handle": {
                    "Ref": "WaitForMasterInstallWaitHandle"
                },
                "Timeout": "3600"
            }
        },
        "WaitForMasterInstallWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle",
            "Properties": {}
        },
        "HANAMasterInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "HostRole": "Master"
            },
            "Properties": {
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "HANAMasterInterface"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "PlacementGroupName": {
                    "Fn::If": [
                        "PlacementGroupNull",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        {
                            "Ref": "PlacementGroupName"
                        }
                    ]
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "ImageId": {
                    "Ref": "MyRegionAMI"
                },
                "IamInstanceProfile": {
                    "Ref": "HANAIAMProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "SAP HANA Master"
                    }
                ],
                "Volumes": [
                    {
                        "VolumeId": {
                            "Ref": "SoftwareDepotVol"
                        },
                        "Device": "/dev/sdz"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sdb",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sdc",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sdd",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sde",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sds",
                        "Ebs": {
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true",
                            "VolumeSize": "50"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xv\n",
                                "sudo su -c ",
                                "' ",
                                "\n",
                                "exec 3>&1 1>>/root/install/misc.log 2>&1 \n",
                                "hostname ",
                                {
                                    "Ref": "HANAMasterHostname"
                                },
                                "\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        ".",
                                        [
                                            {
                                                "Ref": "HANAMasterHostname"
                                            },
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/HOSTNAME\n",
                                "mkdir /root/install\n",
                                "wget https://s3.amazonaws.com/quickstart-reference/sap/hana/latest/scripts/download.sh --output-document=/root/install/download.sh\n",
                                "sh /root/install/download.sh\n",
                                "chmod 755 /root/install/*.sh\n",
                                "chmod 755 /root/install/*.py\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "_",
                                        [
                                            "export TABLE_NAME=HANAMonitor_",
                                            {
                                                "Ref": "AWS::StackName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export AVAILABILITY_ZONE=",
                                            {
                                                "Ref": "MyAvailabilityZone"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export REGION=",
                                            {
                                                "Ref": "AWS::Region"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "sh /root/install/install-aws.sh\n",
                                "sh /root/install/install-prereq.sh\n",
                                "sh /root/install/cluster-watch-engine.sh -c \n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "DomainName=",
                                {
                                    "Ref": "DomainName"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyHostname=",
                                {
                                    "Ref": "HANAMasterHostname"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyRole=Master",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "Status=PRE_INSTALL_COMPLETE",
                                "\"",
                                "\n",
                                "sh /root/install/reconcile-ips.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/fence-cluster.sh -w \"PRE_INSTALL_COMPLETE_ACK=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/install-master.sh -s ",
                                {
                                    "Ref": "SID"
                                },
                                " -i ",
                                {
                                    "Ref": "SAPInstanceNum"
                                },
                                " -p ",
                                {
                                    "Ref": "HANAMasterPass"
                                },
                                " -n ",
                                {
                                    "Ref": "HANAMasterHostname"
                                },
                                " -d ",
                                {
                                    "Ref": "DomainName"
                                },
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"MASTER_NODE_COMPLETE\"\n",
                                "sh /root/install/wait-for-workers.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/cleanup.sh ",
                                "\n",
                                "sh /root/install/signal-complete.sh \"",
                                {
                                    "Ref": "WaitForMasterInstallWaitHandle"
                                },
                                "\" \n",
                                "' ",
                                "\n"
                            ]
                        ]
                    }
                },
                "InstanceType": {
                    "Ref": "MyInstanceType"
                }
            }
        },
        "HANAWorkerInstance1": {
            "Type": "AWS::EC2::Instance",
            "Condition": "twoormorenodes",
            "Metadata": {
                "HostRole": "Worker"
            },
            "Properties": {
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "HANAWorker1Interface"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "PlacementGroupName": {
                    "Fn::If": [
                        "PlacementGroupNull",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        {
                            "Ref": "PlacementGroupName"
                        }
                    ]
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "ImageId": {
                    "Ref": "MyRegionAMI"
                },
                "IamInstanceProfile": {
                    "Ref": "HANAIAMProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "SAP HANA Worker 1"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sdb",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sdc",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sdd",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sde",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sds",
                        "Ebs": {
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true",
                            "VolumeSize": "50"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -v\n",
                                "sudo su -c ",
                                "' ",
                                "\n",
                                "exec 3>&1 1>>/root/install/misc.log 2>&1 \n",
                                "hostname imdbworker01\n",
                                "echo imdbworker01 > /etc/HOSTNAME\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        ".",
                                        [
                                            "imdbworker01",
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/HOSTNAME\n",
                                "mkdir /root/install\n",
                                "wget https://s3.amazonaws.com/quickstart-reference/sap/hana/latest/scripts/download.sh --output-document=/root/install/download.sh\n",
                                "sh /root/install/download.sh\n",
                                "chmod 755 /root/install/*.sh\n",
                                "chmod 755 /root/install/*.py\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "_",
                                        [
                                            "export TABLE_NAME=HANAMonitor_",
                                            {
                                                "Ref": "AWS::StackName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export AVAILABILITY_ZONE=",
                                            {
                                                "Ref": "MyAvailabilityZone"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export REGION=",
                                            {
                                                "Ref": "AWS::Region"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "sh /root/install/install-aws.sh\n",
                                "sh /root/install/install-prereq.sh\n",
                                "sh /root/install/cluster-watch-engine.sh -c \n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "DomainName=",
                                {
                                    "Ref": "DomainName"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyHostname=imdbworker01",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyRole=Worker",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"PRE_INSTALL_COMPLETE\"\n",
                                "sh /root/install/reconcile-ips.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/fence-cluster.sh -w \"PRE_INSTALL_COMPLETE_ACK=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/wait-for-master.sh\n",
                                "sh /root/install/install-worker.sh -s ",
                                {
                                    "Ref": "SID"
                                },
                                " -p ",
                                {
                                    "Ref": "HANAMasterPass"
                                },
                                " -n ",
                                {
                                    "Ref": "HANAMasterHostname"
                                },
                                " -d ",
                                {
                                    "Ref": "DomainName"
                                },
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"WORKER_NODE_COMPLETE\"\n",
                                "sh /root/install/wait-for-workers.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/cleanup.sh ",
                                "\n",
                                "' ",
                                "\n"
                            ]
                        ]
                    }
                },
                "InstanceType": {
                    "Ref": "MyInstanceType"
                }
            }
        },
        "HANAWorkerInstance2": {
            "Type": "AWS::EC2::Instance",
            "Condition": "threeormorenodes",
            "Metadata": {
                "HostRole": "Worker"
            },
            "Properties": {
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "HANAWorker2Interface"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "PlacementGroupName": {
                    "Fn::If": [
                        "PlacementGroupNull",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        {
                            "Ref": "PlacementGroupName"
                        }
                    ]
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "ImageId": {
                    "Ref": "MyRegionAMI"
                },
                "IamInstanceProfile": {
                    "Ref": "HANAIAMProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "SAP HANA Worker 2"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sdb",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sdc",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sdd",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sde",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sds",
                        "Ebs": {
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true",
                            "VolumeSize": "50"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -v\n",
                                "sudo su -c ",
                                "' ",
                                "\n",
                                "exec 3>&1 1>>/root/install/misc.log 2>&1 \n",
                                "hostname imdbworker02\n",
                                "echo imdbworker02 > /etc/HOSTNAME\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        ".",
                                        [
                                            "imdbworker02",
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/HOSTNAME\n",
                                "mkdir /root/install\n",
                                "wget https://s3.amazonaws.com/quickstart-reference/sap/hana/latest/scripts/download.sh --output-document=/root/install/download.sh\n",
                                "sh /root/install/download.sh\n",
                                "chmod 755 /root/install/*.sh\n",
                                "chmod 755 /root/install/*.py\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "_",
                                        [
                                            "export TABLE_NAME=HANAMonitor_",
                                            {
                                                "Ref": "AWS::StackName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export AVAILABILITY_ZONE=",
                                            {
                                                "Ref": "MyAvailabilityZone"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export REGION=",
                                            {
                                                "Ref": "AWS::Region"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "sh /root/install/install-aws.sh\n",
                                "sh /root/install/install-prereq.sh\n",
                                "sh /root/install/cluster-watch-engine.sh -c \n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "DomainName=",
                                {
                                    "Ref": "DomainName"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyHostname=imdbworker02",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyRole=Worker",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"PRE_INSTALL_COMPLETE\"\n",
                                "sh /root/install/reconcile-ips.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/fence-cluster.sh -w \"PRE_INSTALL_COMPLETE_ACK=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/wait-for-master.sh\n",
                                "sh /root/install/install-worker.sh -s ",
                                {
                                    "Ref": "SID"
                                },
                                " -p ",
                                {
                                    "Ref": "HANAMasterPass"
                                },
                                " -n ",
                                {
                                    "Ref": "HANAMasterHostname"
                                },
                                " -d ",
                                {
                                    "Ref": "DomainName"
                                },
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"WORKER_NODE_COMPLETE\"\n",
                                "sh /root/install/wait-for-workers.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/cleanup.sh ",
                                "\n",
                                "' ",
                                "\n"
                            ]
                        ]
                    }
                },
                "InstanceType": {
                    "Ref": "MyInstanceType"
                }
            }
        },
        "HANAWorkerInstance3": {
            "Type": "AWS::EC2::Instance",
            "Condition": "fourormorenodes",
            "Metadata": {
                "HostRole": "Worker"
            },
            "Properties": {
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "HANAWorker3Interface"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "PlacementGroupName": {
                    "Fn::If": [
                        "PlacementGroupNull",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        {
                            "Ref": "PlacementGroupName"
                        }
                    ]
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "ImageId": {
                    "Ref": "MyRegionAMI"
                },
                "IamInstanceProfile": {
                    "Ref": "HANAIAMProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "SAP HANA Worker 3"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sdb",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sdc",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sdd",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sde",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sds",
                        "Ebs": {
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true",
                            "VolumeSize": "50"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -v\n",
                                "sudo su -c ",
                                "' ",
                                "\n",
                                "exec 3>&1 1>>/root/install/misc.log 2>&1 \n",
                                "hostname imdbworker03\n",
                                "echo imdbworker03 > /etc/HOSTNAME\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        ".",
                                        [
                                            "imdbworker03",
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/HOSTNAME\n",
                                "mkdir /root/install\n",
                                "wget https://s3.amazonaws.com/quickstart-reference/sap/hana/latest/scripts/download.sh --output-document=/root/install/download.sh\n",
                                "sh /root/install/download.sh\n",
                                "chmod 755 /root/install/*.sh\n",
                                "chmod 755 /root/install/*.py\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "_",
                                        [
                                            "export TABLE_NAME=HANAMonitor_",
                                            {
                                                "Ref": "AWS::StackName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export AVAILABILITY_ZONE=",
                                            {
                                                "Ref": "MyAvailabilityZone"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export REGION=",
                                            {
                                                "Ref": "AWS::Region"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "sh /root/install/install-aws.sh\n",
                                "sh /root/install/install-prereq.sh\n",
                                "sh /root/install/cluster-watch-engine.sh -c \n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "DomainName=",
                                {
                                    "Ref": "DomainName"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyHostname=imdbworker03",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyRole=Worker",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"PRE_INSTALL_COMPLETE\"\n",
                                "sh /root/install/reconcile-ips.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/fence-cluster.sh -w \"PRE_INSTALL_COMPLETE_ACK=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/wait-for-master.sh\n",
                                "sh /root/install/install-worker.sh -s ",
                                {
                                    "Ref": "SID"
                                },
                                " -p ",
                                {
                                    "Ref": "HANAMasterPass"
                                },
                                " -n ",
                                {
                                    "Ref": "HANAMasterHostname"
                                },
                                " -d ",
                                {
                                    "Ref": "DomainName"
                                },
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"WORKER_NODE_COMPLETE\"\n",
                                "sh /root/install/wait-for-workers.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/cleanup.sh ",
                                "\n",
                                "' ",
                                "\n"
                            ]
                        ]
                    }
                },
                "InstanceType": {
                    "Ref": "MyInstanceType"
                }
            }
        },
        "HANAWorkerInstance4": {
            "Type": "AWS::EC2::Instance",
            "Condition": "fiveormorenodes",
            "Metadata": {
                "HostRole": "Worker"
            },
            "Properties": {
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "HANAWorker4Interface"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "PlacementGroupName": {
                    "Fn::If": [
                        "PlacementGroupNull",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        {
                            "Ref": "PlacementGroupName"
                        }
                    ]
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "ImageId": {
                    "Ref": "MyRegionAMI"
                },
                "IamInstanceProfile": {
                    "Ref": "HANAIAMProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "SAP HANA Worker 4"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sdb",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sdc",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sdd",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sde",
                        "Ebs": {
                            "VolumeSize": {
                                "Fn::FindInMap": [
                                    "VolSize",
                                    {
                                        "Ref": "MyInstanceType"
                                    },
                                    "Size"
                                ]
                            },
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true"
                        }
                    },
                    {
                        "DeviceName": "/dev/sds",
                        "Ebs": {
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true",
                            "VolumeSize": "50"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -v\n",
                                "sudo su -c ",
                                "' ",
                                "\n",
                                "exec 3>&1 1>>/root/install/misc.log 2>&1 \n",
                                "hostname imdbworker04\n",
                                "echo imdbworker04 > /etc/HOSTNAME\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        ".",
                                        [
                                            "imdbworker04",
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/HOSTNAME\n",
                                "mkdir /root/install\n",
                                "wget https://s3.amazonaws.com/quickstart-reference/sap/hana/latest/scripts/download.sh --output-document=/root/install/download.sh\n",
                                "sh /root/install/download.sh\n",
                                "chmod 755 /root/install/*.sh\n",
                                "chmod 755 /root/install/*.py\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "_",
                                        [
                                            "export TABLE_NAME=HANAMonitor_",
                                            {
                                                "Ref": "AWS::StackName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export AVAILABILITY_ZONE=",
                                            {
                                                "Ref": "MyAvailabilityZone"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export REGION=",
                                            {
                                                "Ref": "AWS::Region"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "sh /root/install/install-aws.sh\n",
                                "sh /root/install/install-prereq.sh\n",
                                "sh /root/install/cluster-watch-engine.sh -c \n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "DomainName=",
                                {
                                    "Ref": "DomainName"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyHostname=imdbworker04",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyRole=Worker",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"PRE_INSTALL_COMPLETE\"\n",
                                "sh /root/install/reconcile-ips.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/fence-cluster.sh -w \"PRE_INSTALL_COMPLETE_ACK=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/wait-for-master.sh\n",
                                "sh /root/install/install-worker.sh -s ",
                                {
                                    "Ref": "SID"
                                },
                                " -p ",
                                {
                                    "Ref": "HANAMasterPass"
                                },
                                " -n ",
                                {
                                    "Ref": "HANAMasterHostname"
                                },
                                " -d ",
                                {
                                    "Ref": "DomainName"
                                },
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"WORKER_NODE_COMPLETE\"\n",
                                "sh /root/install/wait-for-workers.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/cleanup.sh ",
                                "\n",
                                "' ",
                                "\n"
                            ]
                        ]
                    }
                },
                "InstanceType": {
                    "Ref": "MyInstanceType"
                }
            }
        }
    }
}
